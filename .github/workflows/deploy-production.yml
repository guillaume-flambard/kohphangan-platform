name: Deploy to Production

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

env:
  PROJECT_ID: strayeye
  REGION: asia-southeast1
  REGISTRY: asia-southeast1-docker.pkg.dev
  REPOSITORY: waterfall-apps

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: react-frontend/package-lock.json

    - name: Install dependencies
      run: |
        cd react-frontend
        rm -rf node_modules package-lock.json
        npm install

    - name: Build frontend
      run: |
        cd react-frontend  
        npm run build

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
        service_account: github-deployer@strayeye.iam.gserviceaccount.com

    - name: Configure Docker for Artifact Registry
      run: gcloud auth configure-docker ${{ env.REGISTRY }}

    - name: Build and Push Docker image
      run: |
        cd react-frontend
        docker build --platform linux/amd64 -t ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/frontend:${{ github.sha }} .
        docker build --platform linux/amd64 -t ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/frontend:latest .
        docker push ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/frontend:${{ github.sha }}
        docker push ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/frontend:latest

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy waterfall-party-frontend \
          --image ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/frontend:${{ github.sha }} \
          --region ${{ env.REGION }} \
          --allow-unauthenticated \
          --port 8080 \
          --platform managed

  deploy-backend:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
        service_account: github-deployer@strayeye.iam.gserviceaccount.com

    - name: Configure Docker for Artifact Registry
      run: gcloud auth configure-docker ${{ env.REGISTRY }}

    - name: Build and Push API Docker image
      run: |
        cd laravel-api
        docker build --platform linux/amd64 -t ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/api:${{ github.sha }} -f Dockerfile.simple .
        docker build --platform linux/amd64 -t ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/api:latest -f Dockerfile.simple .
        docker push ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/api:${{ github.sha }}
        docker push ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/api:latest

    - name: Deploy API to Cloud Run
      run: |
        gcloud run deploy waterfall-api \
          --image ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/api:${{ github.sha }} \
          --region ${{ env.REGION }} \
          --allow-unauthenticated \
          --port 8080 \
          --add-cloudsql-instances ${{ env.PROJECT_ID }}:${{ env.REGION }}:minerva \
          --set-env-vars "APP_ENV=production,APP_DEBUG=false,APP_KEY=base64:WaterfallPartyEcho2025SecretKey123456789,APP_URL=https://waterfall-api.strayeye.com,DB_CONNECTION=mysql,DB_HOST=,DB_PORT=,DB_SOCKET=/cloudsql/strayeye:asia-southeast1:minerva,DB_DATABASE=minerva_core,DB_USERNAME=root,DB_PASSWORD=SYtCK6nqbXZwN4" \
          --platform managed